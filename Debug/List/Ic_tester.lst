
AVRASM ver. 2.1.30  E:\3rd communication and electronics\Embedded systems\FINAL_IC_tester\Debug\List\Ic_tester.asm Thu Jan 06 18:25:24 2022

                 
                 
                 ;CodeVisionAVR C Compiler V3.46a Evaluation
                 ;(C) Copyright 1998-2021 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32A
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32A
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0041 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 3437
000034 3631
000035 0a30
000036 3700      	.DB  0x37,0x34,0x31,0x36,0x30,0xA,0x0,0x37
000037 3134
000038 3136
000039 000a
00003a 3437      	.DB  0x34,0x31,0x36,0x31,0xA,0x0,0x37,0x34
00003b 3631
00003c 0a33
00003d 4500
00003e 706d      	.DB  0x31,0x36,0x33,0xA,0x0,0x45,0x6D,0x70
00003f 7974
000040 000a      	.DB  0x74,0x79,0xA,0x0
                 __RESET:
000041 94f8      	CLI
000042 27ee      	CLR  R30
000043 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000044 e0f1      	LDI  R31,1
000045 bff5      	OUT  MCUCR,R31
000046 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000047 e08d      	LDI  R24,(14-2)+1
000048 e0a2      	LDI  R26,2
000049 27bb      	CLR  R27
                 __CLEAR_REG:
00004a 93ed      	ST   X+,R30
00004b 958a      	DEC  R24
00004c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004e e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004f e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000050 93ed      	ST   X+,R30
000051 9701      	SBIW R24,1
000052 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000053 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000054 bfed      	OUT  SPL,R30
000055 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000056 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000057 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000058 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000059 940c 0131 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;unsigned char IC_74163(void)
                 ; 0000 0032 {
                 
                 	.CSEG
                 _IC_74163:
                 ; .FSTART _IC_74163
                 ; 0000 0033 char i,j,D=0b0101;
                 ; 0000 0034 PIN2=LOW;
00005b d29a      	RCALL SUBOPT_0x0
                 ;	i -> R17
                 ;	j -> R16
                 ;	D -> R19
                 ; 0000 0035 PIN1=HIGH;
                 ; 0000 0036 PIN7=HIGH;
                 ; 0000 0037 PIN9=HIGH;
                 ; 0000 0038 PIN10=HIGH;
                 ; 0000 0039 PIN1=LOW;
                 ; 0000 003A PIN2=HIGH;delay_ms(100);PIN2=LOW;
00005c d2a2      	RCALL SUBOPT_0x1
                 ; 0000 003B PIN1=HIGH;
00005d 9adc      	SBI  0x1B,4
                 ; 0000 003C for(i=0;i<9;i++)
00005e e010      	LDI  R17,LOW(0)
                 _0x16:
00005f 3019      	CPI  R17,9
000060 f470      	BRSH _0x17
                 ; 0000 003D {
                 ; 0000 003E 
                 ; 0000 003F delay_ms(10);
000061 d2a3      	RCALL SUBOPT_0x2
                 ; 0000 0040 if(((PIN11<<3)+ (PIN12<<2)+(PIN13<<1)+(PIN14<<0)) !=i)
000062 f011      	BREQ _0x18
                 ; 0000 0041 {return(0);}
000063 e0e0      	LDI  R30,LOW(0)
000064 c0c9      	RJMP _0x2060001
                 ; 0000 0042 
                 ; 0000 0043 
                 ; 0000 0044 delay_ms(10);
                 _0x18:
000065 e0aa      	LDI  R26,LOW(10)
000066 e0b0      	LDI  R27,0
000067 d33c      	RCALL _delay_ms
                 ; 0000 0045 if(PIN15!=LOW)
000068 9b9d      	SBIS 0x13,5
000069 c002      	RJMP _0x19
                 ; 0000 0046 {return(0);}
00006a e0e0      	LDI  R30,LOW(0)
00006b c0c2      	RJMP _0x2060001
                 ; 0000 0047 
                 ; 0000 0048 PIN2=HIGH;delay_ms(100);PIN2=LOW;
                 _0x19:
00006c d292      	RCALL SUBOPT_0x1
                 ; 0000 0049 }
00006d 5f1f      	SUBI R17,-1
00006e cff0      	RJMP _0x16
                 _0x17:
                 ; 0000 004A 
                 ; 0000 004B delay_ms(10);
00006f d295      	RCALL SUBOPT_0x2
                 ; 0000 004C if(((PIN11<<3)+(PIN12<<2)+(PIN13<<1)+(PIN14<<0)) !=i)
000070 f011      	BREQ _0x1E
                 ; 0000 004D {return(0);}
000071 e0e0      	LDI  R30,LOW(0)
000072 c0bb      	RJMP _0x2060001
                 ; 0000 004E 
                 ; 0000 004F // if(PIN15!=HIGH)
                 ; 0000 0050 //{return(0);}
                 ; 0000 0051 // LED_Green=1;
                 ; 0000 0052 for(j=0;j<2;j++)
                 _0x1E:
000073 e000      	LDI  R16,LOW(0)
                 _0x20:
000074 3002      	CPI  R16,2
000075 f4f0      	BRSH _0x21
                 ; 0000 0053 {
                 ; 0000 0054 
                 ; 0000 0055 PIN6=Read_BIT(D,3);
000076 d2b3      	RCALL SUBOPT_0x3
000077 f411      	BRNE _0x22
000078 9895      	CBI  0x12,5
000079 c001      	RJMP _0x23
                 _0x22:
00007a 9a95      	SBI  0x12,5
                 _0x23:
                 ; 0000 0056 PIN5=Read_BIT(D,2);
00007b d2b4      	RCALL SUBOPT_0x4
00007c f411      	BRNE _0x24
00007d 9894      	CBI  0x12,4
00007e c001      	RJMP _0x25
                 _0x24:
00007f 9a94      	SBI  0x12,4
                 _0x25:
                 ; 0000 0057 PIN4=Read_BIT(D,1);
000080 d2b5      	RCALL SUBOPT_0x5
000081 f411      	BRNE _0x26
000082 98df      	CBI  0x1B,7
000083 c001      	RJMP _0x27
                 _0x26:
000084 9adf      	SBI  0x1B,7
                 _0x27:
                 ; 0000 0058 PIN3=Read_BIT(D,0);
000085 fd30      	SBRC R19,0
000086 c002      	RJMP _0x28
000087 98de      	CBI  0x1B,6
000088 c001      	RJMP _0x29
                 _0x28:
000089 9ade      	SBI  0x1B,6
                 _0x29:
                 ; 0000 0059 PIN9=LOW;
00008a 98c3      	CBI  0x18,3
                 ; 0000 005A PIN2=HIGH;delay_ms(100);PIN2=LOW;
00008b d273      	RCALL SUBOPT_0x1
                 ; 0000 005B PIN9=HIGH;
00008c d2b0      	RCALL SUBOPT_0x6
                 ; 0000 005C 
                 ; 0000 005D delay_ms(10);
                 ; 0000 005E if(((PIN11<<3)+(PIN12<<2)+(PIN13<<1)+(PIN14<<0))!=D)
00008d f011      	BREQ _0x32
                 ; 0000 005F {return(0);}
00008e e0e0      	LDI  R30,LOW(0)
00008f c09e      	RJMP _0x2060001
                 ; 0000 0060 D=D^0b1111;
                 _0x32:
000090 e0ef      	LDI  R30,LOW(15)
000091 273e      	EOR  R19,R30
                 ; 0000 0061 
                 ; 0000 0062 }}
000092 5f0f      	SUBI R16,-1
000093 cfe0      	RJMP _0x20
                 _0x21:
000094 c099      	RJMP _0x2060001
                 ; .FEND
                 ;unsigned char IC_74160(void)
                 ; 0000 0064 {    char i,j,D=0b0101;
                 _IC_74160:
                 ; .FSTART _IC_74160
                 ; 0000 0065 PIN2=LOW;
000095 d260      	RCALL SUBOPT_0x0
                 ;	i -> R17
                 ;	j -> R16
                 ;	D -> R19
                 ; 0000 0066 PIN1=HIGH;
                 ; 0000 0067 PIN7=HIGH;
                 ; 0000 0068 PIN9=HIGH;
                 ; 0000 0069 PIN10=HIGH;
                 ; 0000 006A PIN1=LOW;
                 ; 0000 006B PIN1=HIGH;
000096 9adc      	SBI  0x1B,4
                 ; 0000 006C 
                 ; 0000 006D for(i=0;i<9;i++)
000097 e010      	LDI  R17,LOW(0)
                 _0x42:
000098 3019      	CPI  R17,9
000099 f470      	BRSH _0x43
                 ; 0000 006E {delay_ms(10);
00009a d26a      	RCALL SUBOPT_0x2
                 ; 0000 006F if(((PIN11<<3)+ (PIN12<<2)+(PIN13<<1)+(PIN14<<0)) !=i)
00009b f011      	BREQ _0x44
                 ; 0000 0070 {return(0);}
00009c e0e0      	LDI  R30,LOW(0)
00009d c090      	RJMP _0x2060001
                 ; 0000 0071 delay_ms(10);
                 _0x44:
00009e e0aa      	LDI  R26,LOW(10)
00009f e0b0      	LDI  R27,0
0000a0 d303      	RCALL _delay_ms
                 ; 0000 0072 if(PIN15!=LOW)
0000a1 9b9d      	SBIS 0x13,5
0000a2 c002      	RJMP _0x45
                 ; 0000 0073 {return(0);}
0000a3 e0e0      	LDI  R30,LOW(0)
0000a4 c089      	RJMP _0x2060001
                 ; 0000 0074 
                 ; 0000 0075 PIN2=HIGH;delay_ms(100);PIN2=LOW;
                 _0x45:
0000a5 d259      	RCALL SUBOPT_0x1
                 ; 0000 0076 }
0000a6 5f1f      	SUBI R17,-1
0000a7 cff0      	RJMP _0x42
                 _0x43:
                 ; 0000 0077 if(((PIN11<<3)+(PIN12<<2)+(PIN13<<1)+(PIN14<<0)) !=i)
0000a8 e0a0      	LDI  R26,0
0000a9 99b1      	SBIC 0x16,1
0000aa e0a1      	LDI  R26,1
0000ab 2fea      	MOV  R30,R26
0000ac 0fee      	LSL  R30
0000ad 0fee      	LSL  R30
0000ae 0fee      	LSL  R30
0000af 2e0e      	MOV  R0,R30
0000b0 e0a0      	LDI  R26,0
0000b1 99b0      	SBIC 0x16,0
0000b2 e0a1      	LDI  R26,1
0000b3 2fea      	MOV  R30,R26
0000b4 0fee      	LSL  R30
0000b5 0fee      	LSL  R30
0000b6 0e0e      	ADD  R0,R30
0000b7 e0a0      	LDI  R26,0
0000b8 999f      	SBIC 0x13,7
0000b9 e0a1      	LDI  R26,1
0000ba 2fea      	MOV  R30,R26
0000bb 0fee      	LSL  R30
0000bc 2da0      	MOV  R26,R0
0000bd 0fae      	ADD  R26,R30
0000be e0e0      	LDI  R30,0
0000bf 999e      	SBIC 0x13,6
0000c0 e0e1      	LDI  R30,1
0000c1 0fae      	ADD  R26,R30
0000c2 2fe1      	MOV  R30,R17
0000c3 e0b0      	LDI  R27,0
0000c4 fda7      	SBRC R26,7
0000c5 efbf      	SER  R27
0000c6 e0f0      	LDI  R31,0
0000c7 17ea      	CP   R30,R26
0000c8 07fb      	CPC  R31,R27
0000c9 f011      	BREQ _0x4A
                 ; 0000 0078 {return(0);}
0000ca e0e0      	LDI  R30,LOW(0)
0000cb c062      	RJMP _0x2060001
                 ; 0000 0079 
                 ; 0000 007A //if(PIN15!=1)
                 ; 0000 007B //{return(0);}
                 ; 0000 007C 
                 ; 0000 007D for(j=0;j<2;j++)
                 _0x4A:
0000cc e000      	LDI  R16,LOW(0)
                 _0x4C:
0000cd 3002      	CPI  R16,2
0000ce f4f0      	BRSH _0x4D
                 ; 0000 007E {
                 ; 0000 007F PIN9=LOW;
0000cf 98c3      	CBI  0x18,3
                 ; 0000 0080 PIN6=Read_BIT(D,3);
0000d0 d259      	RCALL SUBOPT_0x3
0000d1 f411      	BRNE _0x50
0000d2 9895      	CBI  0x12,5
0000d3 c001      	RJMP _0x51
                 _0x50:
0000d4 9a95      	SBI  0x12,5
                 _0x51:
                 ; 0000 0081 PIN5=Read_BIT(D,2);
0000d5 d25a      	RCALL SUBOPT_0x4
0000d6 f411      	BRNE _0x52
0000d7 9894      	CBI  0x12,4
0000d8 c001      	RJMP _0x53
                 _0x52:
0000d9 9a94      	SBI  0x12,4
                 _0x53:
                 ; 0000 0082 PIN4=Read_BIT(D,1);
0000da d25b      	RCALL SUBOPT_0x5
0000db f411      	BRNE _0x54
0000dc 98df      	CBI  0x1B,7
0000dd c001      	RJMP _0x55
                 _0x54:
0000de 9adf      	SBI  0x1B,7
                 _0x55:
                 ; 0000 0083 PIN3=Read_BIT(D,0);
0000df fd30      	SBRC R19,0
0000e0 c002      	RJMP _0x56
0000e1 98de      	CBI  0x1B,6
0000e2 c001      	RJMP _0x57
                 _0x56:
0000e3 9ade      	SBI  0x1B,6
                 _0x57:
                 ; 0000 0084 PIN2=HIGH;delay_ms(100);PIN2=LOW;
0000e4 d21a      	RCALL SUBOPT_0x1
                 ; 0000 0085 PIN9=HIGH;
0000e5 d257      	RCALL SUBOPT_0x6
                 ; 0000 0086 delay_ms(10);
                 ; 0000 0087 if(((PIN11<<3)+(PIN12<<2)+(PIN13<<1)+(PIN14<<0))!=D)
0000e6 f011      	BREQ _0x5E
                 ; 0000 0088 {return(0);}
0000e7 e0e0      	LDI  R30,LOW(0)
0000e8 c045      	RJMP _0x2060001
                 ; 0000 0089 D=D^0b1111;
                 _0x5E:
0000e9 e0ef      	LDI  R30,LOW(15)
0000ea 273e      	EOR  R19,R30
                 ; 0000 008A }
0000eb 5f0f      	SUBI R16,-1
0000ec cfe0      	RJMP _0x4C
                 _0x4D:
                 ; 0000 008B return(1);
0000ed c03f      	RJMP _0x2060002
                 ; 0000 008C }
                 ; .FEND
                 ;unsigned char IC_74161(void)
                 ; 0000 008E {
                 _IC_74161:
                 ; .FSTART _IC_74161
                 ; 0000 008F char i,j,D=0b0101;
                 ; 0000 0090 
                 ; 0000 0091 PIN2=LOW;
0000ee d207      	RCALL SUBOPT_0x0
                 ;	i -> R17
                 ;	j -> R16
                 ;	D -> R19
                 ; 0000 0092 PIN1=HIGH;
                 ; 0000 0093 PIN7=HIGH;
                 ; 0000 0094 PIN9=HIGH;
                 ; 0000 0095 PIN10=HIGH;
                 ; 0000 0096 PIN1=LOW;
                 ; 0000 0097 delay_ms(100);
0000ef e6a4      	LDI  R26,LOW(100)
0000f0 e0b0      	LDI  R27,0
0000f1 d2b2      	RCALL _delay_ms
                 ; 0000 0098 PIN1=HIGH;
0000f2 9adc      	SBI  0x1B,4
                 ; 0000 0099 
                 ; 0000 009A 
                 ; 0000 009B for(i=0;i<15;i++)
0000f3 e010      	LDI  R17,LOW(0)
                 _0x6E:
0000f4 301f      	CPI  R17,15
0000f5 f470      	BRSH _0x6F
                 ; 0000 009C { delay_ms(10);
0000f6 d20e      	RCALL SUBOPT_0x2
                 ; 0000 009D if(((PIN11<<3)+ (PIN12<<2)+(PIN13<<1)+(PIN14<<0)) !=i)
0000f7 f011      	BREQ _0x70
                 ; 0000 009E {return(0);}
0000f8 e0e0      	LDI  R30,LOW(0)
0000f9 c034      	RJMP _0x2060001
                 ; 0000 009F delay_ms(10);
                 _0x70:
0000fa e0aa      	LDI  R26,LOW(10)
0000fb e0b0      	LDI  R27,0
0000fc d2a7      	RCALL _delay_ms
                 ; 0000 00A0 if(PIN15!=LOW)
0000fd 9b9d      	SBIS 0x13,5
0000fe c002      	RJMP _0x71
                 ; 0000 00A1 {return(0);};
0000ff e0e0      	LDI  R30,LOW(0)
000100 c02d      	RJMP _0x2060001
                 _0x71:
                 ; 0000 00A2 
                 ; 0000 00A3 PIN2=HIGH;delay_ms(100);PIN2=LOW;}
000101 d1fd      	RCALL SUBOPT_0x1
000102 5f1f      	SUBI R17,-1
000103 cff0      	RJMP _0x6E
                 _0x6F:
                 ; 0000 00A4 delay_ms(10);
000104 d200      	RCALL SUBOPT_0x2
                 ; 0000 00A5 if(((PIN11<<3)+(PIN12<<2)+(PIN13<<1)+(PIN14<<0)) !=i)
000105 f011      	BREQ _0x76
                 ; 0000 00A6 {return(0);}
000106 e0e0      	LDI  R30,LOW(0)
000107 c026      	RJMP _0x2060001
                 ; 0000 00A7 
                 ; 0000 00A8 
                 ; 0000 00A9 if(PIN15!=1)
                 _0x76:
000108 999d      	SBIC 0x13,5
000109 c002      	RJMP _0x77
                 ; 0000 00AA {return(0);}
00010a e0e0      	LDI  R30,LOW(0)
00010b c022      	RJMP _0x2060001
                 ; 0000 00AB 
                 ; 0000 00AC for(j=0;j<2;j++)
                 _0x77:
00010c e000      	LDI  R16,LOW(0)
                 _0x79:
00010d 3002      	CPI  R16,2
00010e f4f0      	BRSH _0x7A
                 ; 0000 00AD {
                 ; 0000 00AE PIN6=Read_BIT(D,3);
00010f d21a      	RCALL SUBOPT_0x3
000110 f411      	BRNE _0x7B
000111 9895      	CBI  0x12,5
000112 c001      	RJMP _0x7C
                 _0x7B:
000113 9a95      	SBI  0x12,5
                 _0x7C:
                 ; 0000 00AF PIN5=Read_BIT(D,2);
000114 d21b      	RCALL SUBOPT_0x4
000115 f411      	BRNE _0x7D
000116 9894      	CBI  0x12,4
000117 c001      	RJMP _0x7E
                 _0x7D:
000118 9a94      	SBI  0x12,4
                 _0x7E:
                 ; 0000 00B0 PIN4=Read_BIT(D,1);
000119 d21c      	RCALL SUBOPT_0x5
00011a f411      	BRNE _0x7F
00011b 98df      	CBI  0x1B,7
00011c c001      	RJMP _0x80
                 _0x7F:
00011d 9adf      	SBI  0x1B,7
                 _0x80:
                 ; 0000 00B1 PIN3=Read_BIT(D,0);
00011e fd30      	SBRC R19,0
00011f c002      	RJMP _0x81
000120 98de      	CBI  0x1B,6
000121 c001      	RJMP _0x82
                 _0x81:
000122 9ade      	SBI  0x1B,6
                 _0x82:
                 ; 0000 00B2 PIN9=LOW;
000123 98c3      	CBI  0x18,3
                 ; 0000 00B3 PIN2=HIGH;delay_ms(100);PIN2=LOW;
000124 d1da      	RCALL SUBOPT_0x1
                 ; 0000 00B4 
                 ; 0000 00B5 PIN9=HIGH;
000125 d217      	RCALL SUBOPT_0x6
                 ; 0000 00B6 delay_ms(10);
                 ; 0000 00B7 if(((PIN11<<3)+(PIN12<<2)+(PIN13<<1)+(PIN14<<0))!=D)
000126 f011      	BREQ _0x8B
                 ; 0000 00B8 {return(0);}
000127 e0e0      	LDI  R30,LOW(0)
000128 c005      	RJMP _0x2060001
                 ; 0000 00B9 D=D^0b1111;
                 _0x8B:
000129 e0ef      	LDI  R30,LOW(15)
00012a 273e      	EOR  R19,R30
                 ; 0000 00BA }
00012b 5f0f      	SUBI R16,-1
00012c cfe0      	RJMP _0x79
                 _0x7A:
                 ; 0000 00BB return(1);}
                 _0x2060002:
00012d e0e1      	LDI  R30,LOW(1)
                 _0x2060001:
00012e d261      	RCALL __LOADLOCR4
00012f 9624      	ADIW R28,4
000130 9508      	RET
                 ; .FEND
                 ;void main(void)
                 ; 0000 00BD {
                 _main:
                 ; .FSTART _main
                 ; 0000 00BE DDRD.2=INPUT;  DDRD.0=OUTPUT;
000131 988a      	CBI  0x11,2
000132 9a88      	SBI  0x11,0
                 ; 0000 00BF DDRD.3=OUTPUT;   //LED & BUTTOTN
000133 9a8b      	SBI  0x11,3
                 ; 0000 00C0 DDRA.4=OUTPUT; DDRA.5=OUTPUT; DDRA.6=OUTPUT; DDRA.7=OUTPUT; DDRD.4=OUTPUT;DDRD.5=OUTPUT; DDRD.6=OUTPUT;
000134 9ad4      	SBI  0x1A,4
000135 9ad5      	SBI  0x1A,5
000136 9ad6      	SBI  0x1A,6
000137 9ad7      	SBI  0x1A,7
000138 9a8c      	SBI  0x11,4
000139 9a8d      	SBI  0x11,5
00013a 9a8e      	SBI  0x11,6
                 ; 0000 00C1 DDRD.7=OUTPUT; DDRB.3=OUTPUT; DDRB.2=OUTPUT; DDRC.4=OUTPUT;
00013b 9a8f      	SBI  0x11,7
00013c 9abb      	SBI  0x17,3
00013d 9aba      	SBI  0x17,2
00013e 9aa4      	SBI  0x14,4
                 ; 0000 00C2 DDRB.1=INPUT;DDRB.0=INPUT;DDRC.7=INPUT;DDRC.6=INPUT; DDRC.5=INPUT;
00013f 98b9      	CBI  0x17,1
000140 98b8      	CBI  0x17,0
000141 98a7      	CBI  0x14,7
000142 98a6      	CBI  0x14,6
000143 98a5      	CBI  0x14,5
                 ; 0000 00C3 
                 ; 0000 00C4 
                 ; 0000 00C5 // USART initialization
                 ; 0000 00C6 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 00C7 // USART Receiver: Off
                 ; 0000 00C8 // USART Transmitter: On
                 ; 0000 00C9 // USART Mode: Asynchronous
                 ; 0000 00CA // USART Baud Rate: 9600
                 ; 0000 00CB UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
000144 e0e0      	LDI  R30,LOW(0)
000145 b9eb      	OUT  0xB,R30
                 ; 0000 00CC UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (1<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
000146 e0e8      	LDI  R30,LOW(8)
000147 b9ea      	OUT  0xA,R30
                 ; 0000 00CD UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
000148 e8e6      	LDI  R30,LOW(134)
000149 bde0      	OUT  0x20,R30
                 ; 0000 00CE UBRRH=0x00;
00014a e0e0      	LDI  R30,LOW(0)
00014b bde0      	OUT  0x20,R30
                 ; 0000 00CF UBRRL=0x06;
00014c e0e6      	LDI  R30,LOW(6)
00014d b9e9      	OUT  0x9,R30
                 ; 0000 00D0 
                 ; 0000 00D1 
                 ; 0000 00D2 while (1)
                 _0xB2:
                 ; 0000 00D3 {
                 ; 0000 00D4 while (TESTSW)
                 _0xB5:
00014e 9b82      	SBIS 0x10,2
00014f c027      	RJMP _0xB7
                 ; 0000 00D5 {
                 ; 0000 00D6 delay_ms(10);
000150 e0aa      	LDI  R26,LOW(10)
000151 e0b0      	LDI  R27,0
000152 d251      	RCALL _delay_ms
                 ; 0000 00D7 while (TESTSW);
                 _0xB8:
000153 9982      	SBIC 0x10,2
000154 cffe      	RJMP _0xB8
                 ; 0000 00D8 if( IC_74160())
000155 df3f      	RCALL _IC_74160
000156 30e0      	CPI  R30,0
000157 f029      	BREQ _0xBB
                 ; 0000 00D9 {
                 ; 0000 00DA LED_Green=1;
000158 9a90      	SBI  0x12,0
                 ; 0000 00DB printf("74160\n");
                +
000159 e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00015a e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00015b d207      	RCALL SUBOPT_0x7
                 ; 0000 00DC LED_Red=0;
                 ; 0000 00DD 
                 ; 0000 00DE }
                 ; 0000 00DF else if (IC_74161())
00015c c019      	RJMP _0xC0
                 _0xBB:
00015d df90      	RCALL _IC_74161
00015e 30e0      	CPI  R30,0
00015f f029      	BREQ _0xC1
                 ; 0000 00E0 {
                 ; 0000 00E1 LED_Green=1;
000160 9a90      	SBI  0x12,0
                 ; 0000 00E2 printf("74161\n");
                +
000161 e6ed     +LDI R30 , LOW ( 2 * _0x0 + ( 7 ) )
000162 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 7 ) )
                 	__POINTW1FN _0x0,7
000163 d1ff      	RCALL SUBOPT_0x7
                 ; 0000 00E3 LED_Red=0;
                 ; 0000 00E4 }
                 ; 0000 00E5 else if (IC_74163())
000164 c011      	RJMP _0xC6
                 _0xC1:
000165 def5      	RCALL _IC_74163
000166 30e0      	CPI  R30,0
000167 f029      	BREQ _0xC7
                 ; 0000 00E6 {
                 ; 0000 00E7 LED_Green=1;
000168 9a90      	SBI  0x12,0
                 ; 0000 00E8 printf("74163\n");
                +
000169 e7e4     +LDI R30 , LOW ( 2 * _0x0 + ( 14 ) )
00016a e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 14 ) )
                 	__POINTW1FN _0x0,14
00016b d1f7      	RCALL SUBOPT_0x7
                 ; 0000 00E9 LED_Red=0;
                 ; 0000 00EA }
                 ; 0000 00EB else
00016c c009      	RJMP _0xCC
                 _0xC7:
                 ; 0000 00EC {
                 ; 0000 00ED LED_Red=1;
00016d 9a93      	SBI  0x12,3
                 ; 0000 00EE printf("Empty\n");
                +
00016e e7eb     +LDI R30 , LOW ( 2 * _0x0 + ( 21 ) )
00016f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 21 ) )
                 	__POINTW1FN _0x0,21
000170 93fa      	ST   -Y,R31
000171 93ea      	ST   -Y,R30
000172 e080      	LDI  R24,0
000173 d142      	RCALL _printf
000174 9622      	ADIW R28,2
                 ; 0000 00EF LED_Green=0;
000175 9890      	CBI  0x12,0
                 ; 0000 00F0 }
                 _0xCC:
                 _0xC6:
                 _0xC0:
                 ; 0000 00F1 
                 ; 0000 00F2 }}}
000176 cfd7      	RJMP _0xB5
                 _0xB7:
000177 cfd6      	RJMP _0xB2
                 _0xD1:
000178 cfff      	RJMP _0xD1
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
000179 93aa      	ST   -Y,R26
                 putchar0:
00017a 9b5d           sbis usr,udre
00017b cffe           rjmp putchar0
00017c 81e8           ld   r30,y
00017d b9ec           out  udr,r30
00017e 9621      	ADIW R28,1
00017f 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
000180 d208      	RCALL __SAVELOCR4
000181 018d      	MOVW R16,R26
000182 813c      	LDD  R19,Y+4
000183 2fa3      	MOV  R26,R19
000184 dff4      	RCALL _putchar
000185 01d8      	MOVW R26,R16
000186 91ed      	LD   R30,X+
000187 91fd      	LD   R31,X+
000188 9631      	ADIW R30,1
000189 93fe      	ST   -X,R31
00018a 93ee      	ST   -X,R30
00018b d204      	RCALL __LOADLOCR4
00018c 9625      	ADIW R28,5
00018d 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
00018e 93ba      	ST   -Y,R27
00018f 93aa      	ST   -Y,R26
000190 9726      	SBIW R28,6
000191 d1f5      	RCALL __SAVELOCR6
000192 e010      	LDI  R17,0
000193 85ac      	LDD  R26,Y+12
000194 85bd      	LDD  R27,Y+12+1
000195 e0e0      	LDI  R30,LOW(0)
000196 e0f0      	LDI  R31,HIGH(0)
000197 93ed      	ST   X+,R30
000198 93fc      	ST   X,R31
                 _0x2000016:
000199 89ea      	LDD  R30,Y+18
00019a 89fb      	LDD  R31,Y+18+1
00019b 9631      	ADIW R30,1
00019c 8bea      	STD  Y+18,R30
00019d 8bfb      	STD  Y+18+1,R31
00019e 9731      	SBIW R30,1
00019f 91e4      	LPM  R30,Z
0001a0 2f2e      	MOV  R18,R30
0001a1 30e0      	CPI  R30,0
0001a2 f409      	BRNE PC+2
0001a3 c10b      	RJMP _0x2000018
0001a4 2fe1      	MOV  R30,R17
0001a5 30e0      	CPI  R30,0
0001a6 f431      	BRNE _0x200001C
0001a7 3225      	CPI  R18,37
0001a8 f411      	BRNE _0x200001D
0001a9 e011      	LDI  R17,LOW(1)
0001aa c001      	RJMP _0x200001E
                 _0x200001D:
0001ab d1be      	RCALL SUBOPT_0x8
                 _0x200001E:
0001ac c101      	RJMP _0x200001B
                 _0x200001C:
0001ad 30e1      	CPI  R30,LOW(0x1)
0001ae f4a1      	BRNE _0x200001F
0001af 3225      	CPI  R18,37
0001b0 f411      	BRNE _0x2000020
0001b1 d1b8      	RCALL SUBOPT_0x8
0001b2 c0fa      	RJMP _0x20000CC
                 _0x2000020:
0001b3 e012      	LDI  R17,LOW(2)
0001b4 e040      	LDI  R20,LOW(0)
0001b5 e000      	LDI  R16,LOW(0)
0001b6 322d      	CPI  R18,45
0001b7 f411      	BRNE _0x2000021
0001b8 e001      	LDI  R16,LOW(1)
0001b9 c0f4      	RJMP _0x200001B
                 _0x2000021:
0001ba 322b      	CPI  R18,43
0001bb f411      	BRNE _0x2000022
0001bc e24b      	LDI  R20,LOW(43)
0001bd c0f0      	RJMP _0x200001B
                 _0x2000022:
0001be 3220      	CPI  R18,32
0001bf f411      	BRNE _0x2000023
0001c0 e240      	LDI  R20,LOW(32)
0001c1 c0ec      	RJMP _0x200001B
                 _0x2000023:
0001c2 c002      	RJMP _0x2000024
                 _0x200001F:
0001c3 30e2      	CPI  R30,LOW(0x2)
0001c4 f439      	BRNE _0x2000025
                 _0x2000024:
0001c5 e050      	LDI  R21,LOW(0)
0001c6 e013      	LDI  R17,LOW(3)
0001c7 3320      	CPI  R18,48
0001c8 f411      	BRNE _0x2000026
0001c9 6800      	ORI  R16,LOW(128)
0001ca c0e3      	RJMP _0x200001B
                 _0x2000026:
0001cb c003      	RJMP _0x2000027
                 _0x2000025:
0001cc 30e3      	CPI  R30,LOW(0x3)
0001cd f009      	BREQ PC+2
0001ce c0df      	RJMP _0x200001B
                 _0x2000027:
0001cf 3320      	CPI  R18,48
0001d0 f010      	BRLO _0x200002A
0001d1 332a      	CPI  R18,58
0001d2 f008      	BRLO _0x200002B
                 _0x200002A:
0001d3 c007      	RJMP _0x2000029
                 _0x200002B:
0001d4 e0aa      	LDI  R26,LOW(10)
0001d5 9f5a      	MUL  R21,R26
0001d6 2d50      	MOV  R21,R0
0001d7 2fe2      	MOV  R30,R18
0001d8 53e0      	SUBI R30,LOW(48)
0001d9 0f5e      	ADD  R21,R30
0001da c0d3      	RJMP _0x200001B
                 _0x2000029:
0001db 2fe2      	MOV  R30,R18
0001dc 36e3      	CPI  R30,LOW(0x63)
0001dd f439      	BRNE _0x200002F
0001de d192      	RCALL SUBOPT_0x9
0001df 89e8      	LDD  R30,Y+16
0001e0 89f9      	LDD  R31,Y+16+1
0001e1 81a4      	LDD  R26,Z+4
0001e2 93aa      	ST   -Y,R26
0001e3 d193      	RCALL SUBOPT_0xA
0001e4 c0c8      	RJMP _0x2000030
                 _0x200002F:
0001e5 37e3      	CPI  R30,LOW(0x73)
0001e6 f429      	BRNE _0x2000032
0001e7 d189      	RCALL SUBOPT_0x9
0001e8 d194      	RCALL SUBOPT_0xB
0001e9 d0f3      	RCALL _strlen
0001ea 2f1e      	MOV  R17,R30
0001eb c007      	RJMP _0x2000033
                 _0x2000032:
0001ec 37e0      	CPI  R30,LOW(0x70)
0001ed f449      	BRNE _0x2000035
0001ee d182      	RCALL SUBOPT_0x9
0001ef d18d      	RCALL SUBOPT_0xB
0001f0 d0f8      	RCALL _strlenf
0001f1 2f1e      	MOV  R17,R30
0001f2 6008      	ORI  R16,LOW(8)
                 _0x2000033:
0001f3 6002      	ORI  R16,LOW(2)
0001f4 770f      	ANDI R16,LOW(127)
0001f5 e030      	LDI  R19,LOW(0)
0001f6 c03a      	RJMP _0x2000036
                 _0x2000035:
0001f7 36e4      	CPI  R30,LOW(0x64)
0001f8 f011      	BREQ _0x2000039
0001f9 36e9      	CPI  R30,LOW(0x69)
0001fa f411      	BRNE _0x200003A
                 _0x2000039:
0001fb 6004      	ORI  R16,LOW(4)
0001fc c002      	RJMP _0x200003B
                 _0x200003A:
0001fd 37e5      	CPI  R30,LOW(0x75)
0001fe f431      	BRNE _0x200003C
                 _0x200003B:
0001ff e5e4      	LDI  R30,LOW(_tbl10_G100*2)
000200 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000201 83ee      	STD  Y+6,R30
000202 83ff      	STD  Y+6+1,R31
000203 e015      	LDI  R17,LOW(5)
000204 c00c      	RJMP _0x200003D
                 _0x200003C:
000205 35e8      	CPI  R30,LOW(0x58)
000206 f411      	BRNE _0x200003F
000207 6008      	ORI  R16,LOW(8)
000208 c003      	RJMP _0x2000040
                 _0x200003F:
000209 37e8      	CPI  R30,LOW(0x78)
00020a f009      	BREQ PC+2
00020b c0a1      	RJMP _0x2000071
                 _0x2000040:
00020c e5ee      	LDI  R30,LOW(_tbl16_G100*2)
00020d e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
00020e 83ee      	STD  Y+6,R30
00020f 83ff      	STD  Y+6+1,R31
000210 e014      	LDI  R17,LOW(4)
                 _0x200003D:
000211 ff02      	SBRS R16,2
000212 c015      	RJMP _0x2000042
000213 d15d      	RCALL SUBOPT_0x9
000214 89a8      	LDD  R26,Y+16
000215 89b9      	LDD  R27,Y+16+1
000216 9614      	ADIW R26,4
000217 91ed      	LD   R30,X+
000218 91fd      	LD   R31,X+
000219 87ea      	STD  Y+10,R30
00021a 87fb      	STD  Y+10+1,R31
00021b 85ab      	LDD  R26,Y+11
00021c 23aa      	TST  R26
00021d f422      	BRPL _0x2000043
00021e d176      	RCALL __ANEGW1
00021f 87ea      	STD  Y+10,R30
000220 87fb      	STD  Y+10+1,R31
000221 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
000222 3040      	CPI  R20,0
000223 f011      	BREQ _0x2000044
000224 5f1f      	SUBI R17,-LOW(1)
000225 c001      	RJMP _0x2000045
                 _0x2000044:
000226 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
000227 c009      	RJMP _0x2000046
                 _0x2000042:
000228 d148      	RCALL SUBOPT_0x9
000229 89a8      	LDD  R26,Y+16
00022a 89b9      	LDD  R27,Y+16+1
00022b 9614      	ADIW R26,4
                +
00022c 91ed     +LD R30 , X +
00022d 91fc     +LD R31 , X
00022e 9711     +SBIW R26 , 1
                 	__GETW1P
00022f 87ea      	STD  Y+10,R30
000230 87fb      	STD  Y+10+1,R31
                 _0x2000046:
                 _0x2000036:
000231 fd00      	SBRC R16,0
000232 c010      	RJMP _0x2000047
                 _0x2000048:
000233 1715      	CP   R17,R21
000234 f470      	BRSH _0x200004A
000235 ff07      	SBRS R16,7
000236 c008      	RJMP _0x200004B
000237 ff02      	SBRS R16,2
000238 c004      	RJMP _0x200004C
000239 7f0b      	ANDI R16,LOW(251)
00023a 2f24      	MOV  R18,R20
00023b 5011      	SUBI R17,LOW(1)
00023c c001      	RJMP _0x200004D
                 _0x200004C:
00023d e320      	LDI  R18,LOW(48)
                 _0x200004D:
00023e c001      	RJMP _0x200004E
                 _0x200004B:
00023f e220      	LDI  R18,LOW(32)
                 _0x200004E:
000240 d129      	RCALL SUBOPT_0x8
000241 5051      	SUBI R21,LOW(1)
000242 cff0      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
000243 2f31      	MOV  R19,R17
000244 ff01      	SBRS R16,1
000245 c016      	RJMP _0x200004F
                 _0x2000050:
000246 3030      	CPI  R19,0
000247 f099      	BREQ _0x2000052
000248 ff03      	SBRS R16,3
000249 c006      	RJMP _0x2000053
00024a 81ee      	LDD  R30,Y+6
00024b 81ff      	LDD  R31,Y+6+1
00024c 9125      	LPM  R18,Z+
00024d 83ee      	STD  Y+6,R30
00024e 83ff      	STD  Y+6+1,R31
00024f c005      	RJMP _0x2000054
                 _0x2000053:
000250 81ae      	LDD  R26,Y+6
000251 81bf      	LDD  R27,Y+6+1
000252 912d      	LD   R18,X+
000253 83ae      	STD  Y+6,R26
000254 83bf      	STD  Y+6+1,R27
                 _0x2000054:
000255 d114      	RCALL SUBOPT_0x8
000256 3050      	CPI  R21,0
000257 f009      	BREQ _0x2000055
000258 5051      	SUBI R21,LOW(1)
                 _0x2000055:
000259 5031      	SUBI R19,LOW(1)
00025a cfeb      	RJMP _0x2000050
                 _0x2000052:
00025b c048      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
00025c e320      	LDI  R18,LOW(48)
00025d 81ee      	LDD  R30,Y+6
00025e 81ff      	LDD  R31,Y+6+1
00025f d140      	RCALL __GETW1PF
000260 87e8      	STD  Y+8,R30
000261 87f9      	STD  Y+8+1,R31
000262 81ee      	LDD  R30,Y+6
000263 81ff      	LDD  R31,Y+6+1
000264 9632      	ADIW R30,2
000265 83ee      	STD  Y+6,R30
000266 83ff      	STD  Y+6+1,R31
                 _0x200005A:
000267 85e8      	LDD  R30,Y+8
000268 85f9      	LDD  R31,Y+8+1
000269 85aa      	LDD  R26,Y+10
00026a 85bb      	LDD  R27,Y+10+1
00026b 17ae      	CP   R26,R30
00026c 07bf      	CPC  R27,R31
00026d f050      	BRLO _0x200005C
00026e 5f2f      	SUBI R18,-LOW(1)
00026f 85a8      	LDD  R26,Y+8
000270 85b9      	LDD  R27,Y+8+1
000271 85ea      	LDD  R30,Y+10
000272 85fb      	LDD  R31,Y+10+1
000273 1bea      	SUB  R30,R26
000274 0bfb      	SBC  R31,R27
000275 87ea      	STD  Y+10,R30
000276 87fb      	STD  Y+10+1,R31
000277 cfef      	RJMP _0x200005A
                 _0x200005C:
000278 332a      	CPI  R18,58
000279 f028      	BRLO _0x200005D
00027a ff03      	SBRS R16,3
00027b c002      	RJMP _0x200005E
00027c 5f29      	SUBI R18,-LOW(7)
00027d c001      	RJMP _0x200005F
                 _0x200005E:
00027e 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
00027f fd04      	SBRC R16,4
000280 c019      	RJMP _0x2000061
000281 3321      	CPI  R18,49
000282 f420      	BRSH _0x2000063
000283 85a8      	LDD  R26,Y+8
000284 85b9      	LDD  R27,Y+8+1
000285 9711      	SBIW R26,1
000286 f409      	BRNE _0x2000062
                 _0x2000063:
000287 c009      	RJMP _0x20000CD
                 _0x2000062:
000288 1753      	CP   R21,R19
000289 f010      	BRLO _0x2000067
00028a ff00      	SBRS R16,0
00028b c001      	RJMP _0x2000068
                 _0x2000067:
00028c c011      	RJMP _0x2000066
                 _0x2000068:
00028d e220      	LDI  R18,LOW(32)
00028e ff07      	SBRS R16,7
00028f c00a      	RJMP _0x2000069
000290 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
000291 6100      	ORI  R16,LOW(16)
000292 ff02      	SBRS R16,2
000293 c006      	RJMP _0x200006A
000294 7f0b      	ANDI R16,LOW(251)
000295 934a      	ST   -Y,R20
000296 d0e0      	RCALL SUBOPT_0xA
000297 3050      	CPI  R21,0
000298 f009      	BREQ _0x200006B
000299 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
00029a d0cf      	RCALL SUBOPT_0x8
00029b 3050      	CPI  R21,0
00029c f009      	BREQ _0x200006C
00029d 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
00029e 5031      	SUBI R19,LOW(1)
00029f 85a8      	LDD  R26,Y+8
0002a0 85b9      	LDD  R27,Y+8+1
0002a1 9712      	SBIW R26,2
0002a2 f008      	BRLO _0x2000059
0002a3 cfb8      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
0002a4 ff00      	SBRS R16,0
0002a5 c007      	RJMP _0x200006D
                 _0x200006E:
0002a6 3050      	CPI  R21,0
0002a7 f029      	BREQ _0x2000070
0002a8 5051      	SUBI R21,LOW(1)
0002a9 e2e0      	LDI  R30,LOW(32)
0002aa 93ea      	ST   -Y,R30
0002ab d0cb      	RCALL SUBOPT_0xA
0002ac cff9      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
0002ad e010      	LDI  R17,LOW(0)
                 _0x200001B:
0002ae ceea      	RJMP _0x2000016
                 _0x2000018:
0002af 85ac      	LDD  R26,Y+12
0002b0 85bd      	LDD  R27,Y+12+1
0002b1 91ed      	LD   R30,X+
0002b2 91fd      	LD   R31,X+
0002b3 d0da      	RCALL __LOADLOCR6
0002b4 9664      	ADIW R28,20
0002b5 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
0002b6 92ff      	PUSH R15
0002b7 2ef8      	MOV  R15,R24
0002b8 9726      	SBIW R28,6
0002b9 931a      	ST   -Y,R17
0002ba 930a      	ST   -Y,R16
0002bb 01de      	MOVW R26,R28
0002bc 9614      	ADIW R26,4
                +
0002bd 2400     +CLR R0
0002be 0daf     +ADD R26 , R15
0002bf 1db0     +ADC R27 , R0
                 	__ADDW2R15
0002c0 018d      	MOVW R16,R26
0002c1 e0e0      	LDI  R30,LOW(0)
0002c2 83ec      	STD  Y+4,R30
0002c3 83ed      	STD  Y+4+1,R30
0002c4 83ee      	STD  Y+6,R30
0002c5 83ef      	STD  Y+6+1,R30
0002c6 01de      	MOVW R26,R28
0002c7 9618      	ADIW R26,8
                +
0002c8 2400     +CLR R0
0002c9 0daf     +ADD R26 , R15
0002ca 1db0     +ADC R27 , R0
                 	__ADDW2R15
0002cb 91ed      	LD   R30,X+
0002cc 91fd      	LD   R31,X+
0002cd 93fa      	ST   -Y,R31
0002ce 93ea      	ST   -Y,R30
0002cf 931a      	ST   -Y,R17
0002d0 930a      	ST   -Y,R16
0002d1 e8e0      	LDI  R30,LOW(_put_usart_G100)
0002d2 e0f1      	LDI  R31,HIGH(_put_usart_G100)
0002d3 93fa      	ST   -Y,R31
0002d4 93ea      	ST   -Y,R30
0002d5 01de      	MOVW R26,R28
0002d6 9618      	ADIW R26,8
0002d7 deb6      	RCALL __print_G100
0002d8 8119      	LDD  R17,Y+1
0002d9 8108      	LDD  R16,Y+0
0002da 9628      	ADIW R28,8
0002db 90ff      	POP  R15
0002dc 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0002dd 93ba      	ST   -Y,R27
0002de 93aa      	ST   -Y,R26
0002df 91a9          ld   r26,y+
0002e0 91b9          ld   r27,y+
0002e1 27ee          clr  r30
0002e2 27ff          clr  r31
                 strlen0:
0002e3 916d          ld   r22,x+
0002e4 2366          tst  r22
0002e5 f011          breq strlen1
0002e6 9631          adiw r30,1
0002e7 cffb          rjmp strlen0
                 strlen1:
0002e8 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0002e9 93ba      	ST   -Y,R27
0002ea 93aa      	ST   -Y,R26
0002eb 27aa          clr  r26
0002ec 27bb          clr  r27
0002ed 91e9          ld   r30,y+
0002ee 91f9          ld   r31,y+
                 strlenf0:
0002ef 9005      	lpm  r0,z+
0002f0 2000          tst  r0
0002f1 f011          breq strlenf1
0002f2 9611          adiw r26,1
0002f3 cffb          rjmp strlenf0
                 strlenf1:
0002f4 01fd          movw r30,r26
0002f5 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x0:
0002f6 d092      	RCALL __SAVELOCR4
0002f7 e035      	LDI  R19,5
0002f8 98dd      	CBI  0x1B,5
0002f9 9adc      	SBI  0x1B,4
0002fa 9a96      	SBI  0x12,6
0002fb 9ac3      	SBI  0x18,3
0002fc 9ac2      	SBI  0x18,2
0002fd 98dc      	CBI  0x1B,4
0002fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x1:
0002ff 9add      	SBI  0x1B,5
000300 e6a4      	LDI  R26,LOW(100)
000301 e0b0      	LDI  R27,0
000302 d0a1      	RCALL _delay_ms
000303 98dd      	CBI  0x1B,5
000304 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:138 WORDS
                 SUBOPT_0x2:
000305 e0aa      	LDI  R26,LOW(10)
000306 e0b0      	LDI  R27,0
000307 d09c      	RCALL _delay_ms
000308 e0a0      	LDI  R26,0
000309 99b1      	SBIC 0x16,1
00030a e0a1      	LDI  R26,1
00030b 2fea      	MOV  R30,R26
00030c 0fee      	LSL  R30
00030d 0fee      	LSL  R30
00030e 0fee      	LSL  R30
00030f 2e0e      	MOV  R0,R30
000310 e0a0      	LDI  R26,0
000311 99b0      	SBIC 0x16,0
000312 e0a1      	LDI  R26,1
000313 2fea      	MOV  R30,R26
000314 0fee      	LSL  R30
000315 0fee      	LSL  R30
000316 0e0e      	ADD  R0,R30
000317 e0a0      	LDI  R26,0
000318 999f      	SBIC 0x13,7
000319 e0a1      	LDI  R26,1
00031a 2fea      	MOV  R30,R26
00031b 0fee      	LSL  R30
00031c 2da0      	MOV  R26,R0
00031d 0fae      	ADD  R26,R30
00031e e0e0      	LDI  R30,0
00031f 999e      	SBIC 0x13,6
000320 e0e1      	LDI  R30,1
000321 0fae      	ADD  R26,R30
000322 2fe1      	MOV  R30,R17
000323 e0b0      	LDI  R27,0
000324 fda7      	SBRC R26,7
000325 efbf      	SER  R27
000326 e0f0      	LDI  R31,0
000327 17ea      	CP   R30,R26
000328 07fb      	CPC  R31,R27
000329 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
00032a 2fe3      	MOV  R30,R19
00032b 70e8      	ANDI R30,LOW(0x8)
00032c e0f0      	LDI  R31,0
00032d d06b      	RCALL __ASRW3
00032e 30e0      	CPI  R30,0
00032f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4:
000330 2fe3      	MOV  R30,R19
000331 70e4      	ANDI R30,LOW(0x4)
000332 e0f0      	LDI  R31,0
000333 d067      	RCALL __ASRW2
000334 30e0      	CPI  R30,0
000335 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x5:
000336 2fe3      	MOV  R30,R19
000337 70e2      	ANDI R30,LOW(0x2)
000338 e0f0      	LDI  R31,0
000339 95f5      	ASR  R31
00033a 95e7      	ROR  R30
00033b 30e0      	CPI  R30,0
00033c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:70 WORDS
                 SUBOPT_0x6:
00033d 9ac3      	SBI  0x18,3
00033e e0aa      	LDI  R26,LOW(10)
00033f e0b0      	LDI  R27,0
000340 d063      	RCALL _delay_ms
000341 e0a0      	LDI  R26,0
000342 99b1      	SBIC 0x16,1
000343 e0a1      	LDI  R26,1
000344 2fea      	MOV  R30,R26
000345 0fee      	LSL  R30
000346 0fee      	LSL  R30
000347 0fee      	LSL  R30
000348 2e0e      	MOV  R0,R30
000349 e0a0      	LDI  R26,0
00034a 99b0      	SBIC 0x16,0
00034b e0a1      	LDI  R26,1
00034c 2fea      	MOV  R30,R26
00034d 0fee      	LSL  R30
00034e 0fee      	LSL  R30
00034f 0e0e      	ADD  R0,R30
000350 e0a0      	LDI  R26,0
000351 999f      	SBIC 0x13,7
000352 e0a1      	LDI  R26,1
000353 2fea      	MOV  R30,R26
000354 0fee      	LSL  R30
000355 2da0      	MOV  R26,R0
000356 0fae      	ADD  R26,R30
000357 e0e0      	LDI  R30,0
000358 999e      	SBIC 0x13,6
000359 e0e1      	LDI  R30,1
00035a 0fae      	ADD  R26,R30
00035b 2fe3      	MOV  R30,R19
00035c e0b0      	LDI  R27,0
00035d fda7      	SBRC R26,7
00035e efbf      	SER  R27
00035f e0f0      	LDI  R31,0
000360 17ea      	CP   R30,R26
000361 07fb      	CPC  R31,R27
000362 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x7:
000363 93fa      	ST   -Y,R31
000364 93ea      	ST   -Y,R30
000365 e080      	LDI  R24,0
000366 df4f      	RCALL _printf
000367 9622      	ADIW R28,2
000368 9893      	CBI  0x12,3
000369 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x8:
00036a 932a      	ST   -Y,R18
00036b 85ad      	LDD  R26,Y+13
00036c 85be      	LDD  R27,Y+13+1
00036d 85ef      	LDD  R30,Y+15
00036e 89f8      	LDD  R31,Y+15+1
00036f 9509      	ICALL
000370 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x9:
000371 89e8      	LDD  R30,Y+16
000372 89f9      	LDD  R31,Y+16+1
000373 9734      	SBIW R30,4
000374 8be8      	STD  Y+16,R30
000375 8bf9      	STD  Y+16+1,R31
000376 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xA:
000377 85ad      	LDD  R26,Y+13
000378 85be      	LDD  R27,Y+13+1
000379 85ef      	LDD  R30,Y+15
00037a 89f8      	LDD  R31,Y+15+1
00037b 9509      	ICALL
00037c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xB:
00037d 89a8      	LDD  R26,Y+16
00037e 89b9      	LDD  R27,Y+16+1
00037f 9614      	ADIW R26,4
000380 91ed      	LD   R30,X+
000381 91fd      	LD   R31,X+
000382 83ee      	STD  Y+6,R30
000383 83ff      	STD  Y+6+1,R31
000384 81ae      	LDD  R26,Y+6
000385 81bf      	LDD  R27,Y+6+1
000386 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
000387 935a      	ST   -Y,R21
                 __SAVELOCR5:
000388 934a      	ST   -Y,R20
                 __SAVELOCR4:
000389 933a      	ST   -Y,R19
                 __SAVELOCR3:
00038a 932a      	ST   -Y,R18
                 __SAVELOCR2:
00038b 931a      	ST   -Y,R17
00038c 930a      	ST   -Y,R16
00038d 9508      	RET
                 
                 __LOADLOCR6:
00038e 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00038f 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000390 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000391 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000392 8119      	LDD  R17,Y+1
000393 8108      	LD   R16,Y
000394 9508      	RET
                 
                 __ANEGW1:
000395 95f1      	NEG  R31
000396 95e1      	NEG  R30
000397 40f0      	SBCI R31,0
000398 9508      	RET
                 
                 __ASRW3:
000399 95f5      	ASR  R31
00039a 95e7      	ROR  R30
                 __ASRW2:
00039b 95f5      	ASR  R31
00039c 95e7      	ROR  R30
00039d 95f5      	ASR  R31
00039e 95e7      	ROR  R30
00039f 9508      	RET
                 
                 __GETW1PF:
0003a0 9005      	LPM  R0,Z+
0003a1 91f4      	LPM  R31,Z
0003a2 2de0      	MOV  R30,R0
0003a3 9508      	RET
                 
                 _delay_ms:
0003a4 9610      	adiw r26,0
0003a5 f039      	breq __delay_ms1
                 __delay_ms0:
0003a6 95a8      	wdr
                +
0003a7 ef8a     +LDI R24 , LOW ( 0xFA )
0003a8 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
0003a9 9701     +SBIW R24 , 1
0003aa f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
0003ab 9711      	sbiw r26,1
0003ac f7c9      	brne __delay_ms0
                 __delay_ms1:
0003ad 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32A register use summary:
r0 :  18 r1 :   0 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  41 r17:  30 r18:  27 r19:  21 r20:   9 r21:  17 r22:   2 r23:   0 
r24:   9 r25:   2 r26: 102 r27:  41 r28:  13 r29:   1 r30: 192 r31:  64 
x  :  20 y  : 120 z  :   6 
Registers used: 20 out of 35 (57.1%)

ATmega32A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :  12 
adiw  :  19 and   :   0 andi  :   7 asr   :   4 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  24 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   0 brmi  :   0 brne  :  30 brpl  :   1 brsh  :   8 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :  26 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   8 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   6 cpc   :   4 cpi   :  41 cpse  :   0 dec   :   1 des   :   0 
eor   :   3 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   0 inc   :   0 jmp   :  22 ld    :  20 ldd   :  56 ldi   : 131 
lds   :   0 lpm   :   7 lsl   :  18 lsr   :   0 mov   :  33 movw  :   7 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   6 out   :  11 pop   :   1 push  :   1 rcall :  72 ret   :  25 
reti  :   0 rjmp  :  98 rol   :   0 ror   :   4 sbc   :   1 sbci  :   1 
sbi   :  38 sbic  :  14 sbis  :   5 sbiw  :  10 sbr   :   0 sbrc  :   8 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   3 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  35 std   :  30 sts   :   0 sub   :   1 subi  :  19 swap  :   0 
tst   :   3 wdr   :   1 
Instructions used: 52 out of 116 (44.8%)

ATmega32A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00075c   1838     46   1884   32768   5.7%
[.dseg] 0x000060 0x000260      0      0      0    2048   0.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 0 warnings
